{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(data.table)\nlibrary(RMySQL)\nlibrary(TTR)\nlibrary(lubridate)\n\n# before deal----\ncon <- dbConnect(MySQL(),host=\"127.0.0.1\",dbname=\"smnews\",user=\"root\",password=\"\") \ndbSendQuery(con,'SET NAMES gbk')\nhistory_tem <- as.data.table(dbReadTable(con,'history_tem_jiaodui'))\nstr(history_tem)\nhistory_tem[,\":=\"(ave_tm = as.numeric(ave_tm),max_tm = as.numeric(max_tm),min_tm = as.numeric(min_tm)),]\nhistory_tem[,\":=\"(provi=NULL,area=NULL,s_area=NULL,area_name = NULL),]\nhistory_tem[,.N,year]\nhistory_tem_copy <- copy(history_tem)\n\nhistory_tem <- history_tem_copy[!duplicated(history_tem_copy),,]\nppb_city <- fread('C:\\\\Users\\\\hasee\\\\Desktop\\\\ppb.txt',encoding = 'UTF-8')\n\nhistory_tem <- history_tem %>% left_join(ppb_city,by=c('city')) %>% as.data.table()\nhistory_tem[is.na(area),,]\nhistory_tem[,.N,year]\nhistory_tem[provi == '#N/A',.N,city]\nhistory_tem[provi == '#N/A',\":=\"(provi = '内蒙古',area='华北大区',s_area='北一',area_name = '锡林郭勒'),]\n\n# data----\nday_provi_normal_season <- history_tem[(ymd>=20150101)&(ymd<=20171231)&(!provi%in%c(\"台湾\",\"香港\",\"澳门\")),.(ave_tm  = mean(ave_tm,na.rm = TRUE)),.(ymd,provi,area)][order(area,provi,ymd)]\nday_provi_normal_season <- day_provi_normal_season[provi!=\"\",,]\nday_provi_normal_season[,\":=\"(md = str_sub(ymd,5,8),month = str_sub(ymd,5,6)),]\nday_provi_normal_season <- day_provi_normal_season[md!='0229',,]\nday_provi_normal_season <- day_provi_normal_season[provi!='?????',,] \nhistory_tem[provi == '#N/A',,]\n\n\nday_provi_normal_season[provi=='?????',,]\nday_provi_normal_season[area=='????????',,]\nday_provi_normal_season[,.N,provi]\nday_provi_normal_season[md=='0229',.N,md]\n# tem_var <- day_provi_normal_season[,.N,ave_tm]\n# tem_var[,':='(cut_ave = cut(ave_tm,3)),]\n# tem_var[,.N,cut_ave]\n# rm(tem_var)\n\nmean_day_provi_normal_season <- day_provi_normal_season[,.(ave_tm = mean(ave_tm,na.rm = TRUE)),.(md,month,provi,area)][order(area,provi,md,month)]\nsetcolorder(mean_day_provi_normal_season,c('area','provi','md','month','ave_tm'))\nmean_day_provi_normal_season <- mean_day_provi_normal_season[,,][order(area,provi,md,month)]\nmean_day_provi_normal_season <- mean_day_provi_normal_season[,\":=\"(sma_five = (SMA(ave_tm,n=5))),.(area,provi)]  # average five \n\nnzb_pp <- fread(\"C:\\\\Users\\\\hasee\\\\Desktop\\\\新的天气报表\\\\匹配表.txt\")\ndata_pp <-  data.table(md=sort(unique(mean_day_provi_normal_season$md)),x_lab = c(1:365))\n\nmean_day_provi_normal_season <- mean_day_provi_normal_season %>% left_join(data_pp,by=c(\"md\")) %>% as.data.table()\nmean_day_provi_normal_season <- mean_day_provi_normal_season %>% left_join(nzb_pp,by=c('provi')) %>% as.data.table() \n\nmean_day_provi_normal_season[,\":=\"(spring_sep = (if_else(sma_five >=10&sma_five<22,1,0,0)),\n                                   summer_sep = (if_else(sma_five >=22,1,0,0)),\n                                   autumn_sep = (if_else(sma_five <22&sma_five>=10,1,0,0)),\n                                   winter_sep = (if_else(sma_five <10,1,0,0))\n),.(area,provi)]  # count season\n\n# 0.75*0.75\n# test <- cut(c(10,20,30,40),breaks = c(-Inf,10,22,Inf),labels=c('winter','spring-autter','summer'),ordered = TRUE)\n\nmean_day_provi_normal_season[,\":=\"(sma_five_cut = base::cut(sma_five,breaks = c(-Inf,10,22,Inf),labels=c('winter','spring-autter','summer'),ordered = TRUE)),]\n\nmean_day_provi_normal_season[,\":=\"(spring_sep_sma_count = SMA(spring_sep,n=5)*5,\n                                   summer_sep_sma_count = SMA(summer_sep,n=5)*5,\n                                   auttumn_sep_sma_count = SMA(autumn_sep,n=5)*5,\n                                   winter_sep_sma_count = SMA(winter_sep,n=5)*5 \n),.(area,provi)]\n\n# test\nmean_day_provi_normal_season[1:10]\nmean_day_provi_normal_season[spring_sep_sma_count==5,.N,sma_five_cut]\nmean_day_provi_normal_season[summer_sep_sma_count==5,.N,sma_five_cut]\nmean_day_provi_normal_season[auttumn_sep_sma_count==5,.N,sma_five_cut]\nmean_day_provi_normal_season[winter_sep_sma_count==5,.N,sma_five_cut]\n#  data des----\nmean_day_provi_normal_season_des <- copy(mean_day_provi_normal_season)\nmean_day_provi_normal_season_des <- mean_day_provi_normal_season_des[!is.na(sma_five),,]\nmean_day_provi_normal_season_des[,.N,provi]\n# 全国\nggplot(data = mean_day_provi_normal_season_des[,.(provi,sma_five,x_lab),],aes(x=x_lab,y=sma_five,color=as.factor(provi))) + geom_line()\n# 无四季区域\nggplot(data = mean_day_provi_normal_season_des[provi%in%not_four_area,.(provi,sma_five,x_lab),],aes(x=x_lab,y=sma_five,color=as.factor(provi))) + geom_line()\n# 无夏区\nggplot(data = mean_day_provi_normal_season_des[provi%in%no_summer_area,.(provi,sma_five,x_lab),],aes(x=x_lab,y=sma_five,color=as.factor(provi))) + geom_line()\n# 无冬区\nggplot(data = mean_day_provi_normal_season_des[provi%in%no_winter_area,.(provi,sma_five,x_lab),],aes(x=x_lab,y=sma_five,color=as.factor(provi))) + geom_line()\n# 四季分明区域\nggplot(data = mean_day_provi_normal_season_des[provi%in%four_area,.(provi,sma_five,x_lab),],aes(x=x_lab,y=sma_five,color=as.factor(provi))) + geom_line()\nggplot(data = mean_day_provi_normal_season_des[provi%in%c('海南'),.(provi,sma_five,x_lab),],aes(x=x_lab,y=sma_five,color=as.factor(provi))) + geom_line()\n\n# not four season----\nall_spring_autter <- mean_day_provi_normal_season[spring_sep_sma_count==5,.N,provi][order(provi)]\nall_summer_autter <- mean_day_provi_normal_season[summer_sep_sma_count==5,.N,provi][order(provi)]\nall_winter_autter <- mean_day_provi_normal_season[winter_sep_sma_count==5,.N,provi][order(provi)]\nbase_not_four <- mean_day_provi_normal_season[,.N,provi]\n\nsetnames(all_spring_autter,names(all_spring_autter),c('provi','spring'))\nsetnames(all_summer_autter,names(all_summer_autter),c('provi','summer'))\nsetnames(all_winter_autter,names(all_winter_autter),c('provi','winter'))\nbase_filter_weather_four <- base_not_four %>% left_join(all_spring_autter,by=c('provi')) %>% left_join(all_summer_autter,by=c('provi'))%>% left_join(all_winter_autter,by=c('provi')) %>% as.data.table()\nrm(all_spring_autter,all_summer_autter,all_winter_autter,base_not_four,data_pp,nzb_pp)\n\nbase_filter_weather_four[!complete.cases(base_filter_weather_four)]  # not four season\nbase_filter_weather_four[complete.cases(base_filter_weather_four)]\n\nall_winter_area <- base_filter_weather_four[N==winter]%>% unlist() %>% as.vector()\nall_summer_area <- base_filter_weather_four[N==summer]%>% unlist() %>% as.vector()\nall_spring_area <- base_filter_weather_four[N==spring]%>% unlist() %>% as.vector()\n\nall_season_area <- purrr::reduce(list(all_winter_area,all_summer_area,all_spring_area),function(x,y){dplyr::union(x,y)})\n\nno_summer_area <- base_filter_weather_four[!complete.cases(base_filter_weather_four)][is.na(summer),,][,.(provi),] %>% unlist() %>% as.vector()\nno_winter_area <- base_filter_weather_four[!complete.cases(base_filter_weather_four)][is.na(winter),,][,.(provi),] %>% unlist() %>% as.vector()\n\nnot_four_area <- reduce(list(all_winter_area,all_summer_area,all_spring_area,no_summer_area,no_winter_area),function(x,y){return(dplyr::union(x,y))})\nrm(all_winter_area,all_summer_area,all_spring_area)\nfour_area <- setdiff(base_filter_weather_four$provi,not_four_area)\n#-----four season day------\nfour_mean_day_provi_normal_season <- mean_day_provi_normal_season[provi%in%four_area,,]\n# base max_tem and filter data not wrong\nspring_day <- four_mean_day_provi_normal_season[spring_sep_sma_count==5,.(spring_day= min(md)),.(area,provi)]\n\nfour_mean_day_provi_normal_season[,\":=\"(max_tem= max(ave_tm)),.(area,provi)]\nmax_tem_day <- four_mean_day_provi_normal_season[ave_tm == max_tem,.(max_day = md),.(area,provi)]\nfour_mean_day_provi_normal_season <- \n  four_mean_day_provi_normal_season %>% left_join(spring_day[,.(provi,spring_day),],by=c('provi'))  %>% left_join(max_tem_day[,.(provi,max_day),],by=c('provi')) %>% as.data.table()\nsummer_day <- four_mean_day_provi_normal_season[md>=spring_day&md<=max_day&summer_sep_sma_count==5,.(summer_day= min(md)),.(area,provi)]\n\nfour_mean_day_provi_normal_season <- \n  four_mean_day_provi_normal_season %>% left_join(summer_day[,.(provi,summer_day),],by=c('provi')) %>% as.data.table()\nautter_day <- four_mean_day_provi_normal_season[md>=summer_day&md>=max_day&auttumn_sep_sma_count==5,.(autter_day= min(md)),.(area,provi)]\n\nfour_mean_day_provi_normal_season <- \n  four_mean_day_provi_normal_season %>% left_join(autter_day[,.(provi,autter_day),],by=c('provi')) %>% as.data.table()\nwinter_day <- four_mean_day_provi_normal_season[md>=autter_day&md>=max_day&winter_sep_sma_count==5,.(winter_day= min(md)),.(area,provi)]\n\n\nfour_season_day_standrad <- purrr::reduce(list(spring_day,summer_day,autter_day,winter_day),function(x,y){return(left_join(x,y,by=c('area','provi')))}) %>% as.data.table()\nfour_season_day_standrad[,\":=\"(area=NULL),]\nrm(spring_day,summer_day,autter_day,winter_day)\n# test data get da\nfour_season_day_standrad[,\":=\"(spring_month = as.integer(str_sub(spring_day,1,2)),summer_month = as.integer(str_sub(summer_day,1,2)),autter_month = as.integer(str_sub(autter_day,1,2)),winter_month = as.integer(str_sub(winter_day,1,2))),]\nfour_season_day_standrad[,.(spring_month,summer_month,autter_month,winter_month),]\nfour_season_day_standrad[,':='(spring_months = as.integer(summer_month - spring_month),summer_months = as.integer(autter_month - summer_month) ,autter_months = as.integer(winter_month - autter_month) ,winter_months = as.integer(12 - winter_month + spring_month)),]\nfour_season_day_standrad[,.(provi,spring_months,summer_months,autter_months,winter_months),]\n\n# plot\ndate_plot_reshape <- four_season_day_standrad[,.(provi,spring_months,summer_months,autter_months,winter_months),]\ndate_plot <- melt(four_season_day_standrad[,.(provi,spring_months,summer_months,autter_months,winter_months),],id.vars = 'provi',variable.name = 'season',value.name = 'month_length')\nggplot(date_plot,mapping = aes(x=factor(provi),y=month_length,fill=season))+geom_bar(stat = 'identity')\n\n#---- not four season----\nnot_four_mean_day_provi_normal_season <- mean_day_provi_normal_season[provi%in%not_four_area,,]\n\nnot_four_area <- setdiff(not_four_area,all_season_area)\nnot_four_mean_day_provi_normal_season_no_winter <- not_four_mean_day_provi_normal_season[provi%in%no_winter_area,,]\nnot_four_mean_day_provi_normal_season_no_summer <- not_four_mean_day_provi_normal_season[provi%in%no_summer_area,,]\n\nnot_four_season_day_standrad <- data.table(provi =all_season_area,spring_day=rep(('0000'),length(all_season_area)),\n                                           spring_day=rep(('0000'),length(all_season_area)),\n                                           summer_day=rep(('0000'),length(all_season_area)),\n                                           autter_day=rep(('0000'),length(all_season_area)),\n                                           winter_day=rep(('0000'),length(all_season_area)))\n\nif (length(no_winter_area)>0){\n  # only summer and autter\n  not_four_mean_day_provi_normal_season_no_winter[,\":=\"(max_tem= max(ave_tm)),.(area,provi)]\n  max_tem_day <- not_four_mean_day_provi_normal_season_no_winter[ave_tm == max_tem,.(max_day = md),.(area,provi)]\n  spring_day <- not_four_mean_day_provi_normal_season_no_winter[spring_sep_sma_count==5,.(spring_day= min(md)),.(area,provi)]\n\n  not_four_mean_day_provi_normal_season_no_winter <- \n    not_four_mean_day_provi_normal_season_no_winter %>% left_join(spring_day[,.(provi,spring_day),],by=c('provi'))  %>% left_join(max_tem_day[,.(provi,max_day),],by=c('provi')) %>% as.data.table()\n  \n  \n  summer_day <- not_four_mean_day_provi_normal_season_no_winter[md<=max_tem&md>=spring_day&summer_sep_sma_count==5,.(summer_day= min(md)),.(area,provi)]\n  \n  not_four_mean_day_provi_normal_season_no_winter <- \n    not_four_mean_day_provi_normal_season_no_winter %>% left_join(summer_day[,.(provi,summer_day),],by=c('provi')) %>% as.data.table()\n  autter_day <- not_four_mean_day_provi_normal_season_no_winter[md>=summer_day&md>=max_day&auttumn_sep_sma_count==5,.(autter_day= min(md)),.(area,provi)]\n  \n  not_four_season_day_standrad_no_winter <- purrr::reduce(list(summer_day,autter_day),function(x,y){return(left_join(x,y,by=c('area','provi')))}) %>% as.data.table()\n  not_four_season_day_standrad_no_winter[,\":=\"(spring_day='0101',winter_day='1231'),]\n  setcolorder(not_four_season_day_standrad_no_winter,c('area','provi','spring_day','summer_day','autter_day','winter_day'))\n  not_four_season_day_standrad_no_winter[,\":=\"(area=NULL),]\n  rm(summer_day,autter_day)\n  }\nif (length(no_summer_area)>0){\n  not_four_mean_day_provi_normal_season_no_summer[,\":=\"(max_tem= max(ave_tm)),.(area,provi)]\n  \n  spring_day <- not_four_mean_day_provi_normal_season_no_summer[spring_sep_sma_count==5,.(spring_day= min(md)),.(area,provi)]\n  \n  not_four_mean_day_provi_normal_season_no_summer[,\":=\"(max_tem= max(ave_tm)),.(area,provi)]\n  max_tem_day <- not_four_mean_day_provi_normal_season_no_summer[ave_tm == max_tem,.(max_day = md),.(area,provi)]\n  not_four_mean_day_provi_normal_season_no_summer <- \n    not_four_mean_day_provi_normal_season_no_summer %>% left_join(spring_day[,.(provi,spring_day),],by=c('provi'))  %>% left_join(max_tem_day[,.(provi,max_day),],by=c('provi')) %>% as.data.table()\n\n  winter_day <- not_four_mean_day_provi_normal_season_no_summer[md>=spring_day&md>=max_day&winter_sep_sma_count==5,.(winter_day= min(md)),.(area,provi)]\n  autter_day <- max_tem_day \n  autter_day <- autter_day %>% setnames('max_day','autter_day')\n  \n  not_four_season_day_standrad_no_summer <- purrr::reduce(list(spring_day,autter_day,winter_day),function(x,y){return(left_join(x,y,by=c('area','provi')))}) %>% as.data.table()\n  not_four_season_day_standrad_no_summer[,\":=\"(area=NULL,summer_day= autter_day),]\n  setcolorder(not_four_season_day_standrad_no_summer,c('provi','spring_day','summer_day','autter_day','winter_day'))\n  rm(spring_day,summer_day,autter_day,winter_day)\n  \n}\n\nfour_season_day_standrad[,\":=\"(type='four_season'),]\nnot_four_season_day_standrad_no_summer[,\":=\"(type='no_summer'),]\nnot_four_season_day_standrad_no_winter[,\":=\"(type='no_winter'),]\nall_season_standrad <- bind_rows(four_season_day_standrad %>% select(names(not_four_season_day_standrad_no_summer)),not_four_season_day_standrad_no_summer,not_four_season_day_standrad_no_winter) \nstr(not_four_season_day_standrad_no_winter)\n# mean_day_provi_normal_season\nxlsx::write.xlsx(all_season_standrad,'C:\\\\Users\\\\hasee\\\\Desktop\\\\years_seasons_2015-2017.xlsx')\nall_season_standrad\n\n#---- min & max\n# xlsx::write.xlsx(mean_day_provi_normal_season[!is.na(sma_five),,],'C:\\\\Users\\\\hasee\\\\Desktop\\\\wea_xiuzheng\\\\years_seasons_ori_2017.xlsx')\n# # mean_day_provi_normal_season[!is.na(sma_five),,][,.N,provi]\n# mean_day_provi_normal_season[!is.na(sma_five),,][,.N,provi]\n\n# -----plot and show ----\n# test data get da\nall_season_standrad[,\":=\"(spring_month = as.integer(str_sub(spring_day,1,2)),summer_month = as.integer(str_sub(summer_day,1,2)),autter_month = as.integer(str_sub(autter_day,1,2)),winter_month = as.integer(str_sub(winter_day,1,2))),]\nall_season_standrad[,.(spring_month,summer_month,autter_month,winter_month),]\nall_season_standrad[,':='(spring_months = as.integer(summer_month - spring_month),summer_months = as.integer(autter_month - summer_month) ,autter_months = as.integer(winter_month - autter_month) ,winter_months = as.integer(12 - winter_month + spring_month)),]\nall_season_standrad[,.(provi,type,spring_months,summer_months,autter_months,winter_months),]\n\n# plot season months percents\ndate_plot_reshape <- all_season_standrad[,.(provi,type,spring_months,summer_months,autter_months,winter_months),]\ndate_plot_reshape[type=='no_winter',\":=\"(autter_months = autter_months + winter_months,winter_months=0),]\ndate_plot_reshape[type=='no_winter',,]\ndate_plot <- melt(date_plot_reshape[,.(provi,type,spring_months,summer_months,autter_months,winter_months),],id.vars = 1:2,variable.name = 'season',value.name = 'month_length') %>% as.data.table() %>% setorder(type,month_length)\nggplot(date_plot,mapping = aes(x=factor(provi),y=month_length,fill=season))+geom_bar(stat = 'identity')  + facet_grid(type~.)\n# plot days\ndate_plot_day_reshape <- melt(all_season_standrad[,.(provi,type,spring_day,summer_day,autter_day,winter_day),],id.vars = 1:2,value.name = 'md')\ndata_pp <-  data.table(md=sort(unique(mean_day_provi_normal_season$md)),x_lab = c(1:365))\ndate_plot_day_reshape <- date_plot_day_reshape %>% left_join(data_pp,by=c('md')) %>% select(c(1:3,5))  %>% as.data.table()\n\ndate_plot_day <- dcast(date_plot_day_reshape,provi+type ~ variable,fun.aggregate = sum,value.var = 'x_lab') %>% as.data.table()  %>% setorder(type,provi)\ndate_plot_day[,':='(spring_days = as.integer(summer_day - spring_day),summer_days = as.integer(autter_day - summer_day) ,autter_days = as.integer(winter_day - autter_day) ,winter_days = as.integer(365 - winter_day + spring_day)),]\ndate_plot_day[type=='no_winter',\":=\"(autter_days = autter_days + winter_days,winter_days=0),]\ndate_plot_day[type=='no_winter',,]\ndate_plot_day[type=='no_summer',,]\ndate_plot_day_shape <- melt(date_plot_day[,.(provi,type,spring_days,summer_days,autter_days,winter_days),],id=1:2,value.name = 'days',variable.name = 'season')\nggplot(date_plot_day_shape[days!=0,,],mapping = aes(x=factor(provi),y=days,fill=season))+geom_bar(stat = 'identity',position = 'stack') + geom_text(mapping = aes(label = days),size = 5, colour = 'black', vjust = 1.5, hjust = .5, position = position_stack())+ labs(x='省份',y='天数',title='省份四季划分')\nggplot(date_plot_day_shape[days!=0,,],mapping = aes(x=factor(provi),y=days,fill=season))+geom_bar(stat = 'identity',position = 'stack') + geom_text(mapping = aes(label = days),size = 5, colour = 'black', vjust = 0.5, hjust = 1.5, position = position_stack())+ labs(x='省份',y='天数',title='省份四季划分') + coord_flip()\n\nwrite.csv(date_plot_day_shape,'clipboard')\n\n# ave tem\n# deal data \ntema <- mean_day_provi_normal_season[,c(1:6,7:8,13),]\ntemb <- all_season_standrad[,c(1:6),]\nave_tem_ori_da <- tema %>% left_join(temb[,c(1:2,6),],by=c('provi')) %>% left_join(temb[,c(1,3),],by=c('provi'))%>% left_join(temb[,c(1,4),],by=c('provi'))%>% left_join(temb[,c(1,5),],by=c('provi')) %>% as.data.table()\nrm(tema,temb)\nave_tem_ori_da[md>=spring_day&md<summer_day,\":=\"(season='spring'),]\nave_tem_ori_da[md>=summer_day&md<autter_day,\":=\"(season='summer'),]\nave_tem_ori_da[md>=autter_day&md<winter_day,\":=\"(season='autter'),]\nave_tem_ori_da[md>=winter_day|md<spring_day,\":=\"(season='winter'),]\n# des\n# avetem season four \nave_tem_ori_da[,.(ave_tm = mean(ave_tm,na.rm = TRUE),min_tem = min(ave_tm,na.rm = TRUE),max_tem = max(ave_tm,na.rm = TRUE)),.(provi,season)]\nwrite.csv(ave_tem_ori_da[,.(ave_tm = mean(ave_tm,na.rm = TRUE),min_tem = min(ave_tm,na.rm = TRUE),max_tem = max(ave_tm,na.rm = TRUE)),.(provi,season)],'clipboard')\n# avetem year three\nave_tem_ori_da[,.(ave_tm = mean(ave_tm,na.rm = TRUE),min_tem = min(ave_tm,na.rm = TRUE),max_tem = max(ave_tm,na.rm = TRUE)),.(provi)]\nwrite.csv(\n  ave_tem_ori_da[,.(ave_tm = mean(ave_tm,na.rm = TRUE),min_tem = min(ave_tm,na.rm = TRUE),max_tem = max(ave_tm,na.rm = TRUE)),.(provi)],'clipboard')\n# avetem year three day\ntem_right_pp <- ave_tem_ori_da[,.(ave_tm = mean(ave_tm,na.rm = TRUE),min_tem = min(ave_tm,na.rm = TRUE),max_tem = max(ave_tm,na.rm = TRUE)),.(provi)]\n\nsetnames(tem_right_pp,names(tem_right_pp),c('provi','ave_tem_pp','min_tem_pp','max_tem_pp'))\nave_tem_ori_da <- ave_tem_ori_da %>% left_join(tem_right_pp[,1:2,],by=c('provi')) %>% left_join(tem_right_pp[,c(1,3),],by=c('provi')) %>% left_join(tem_right_pp[,c(1,4),],by=c('provi')) %>% as.data.table()\nave_tem_ori_da[ave_tm == min_tem_pp,.(area,provi,md),]\nave_tem_ori_da[ave_tm == max_tem_pp,.(area,provi,md),]\nwrite.csv(ave_tem_ori_da[ave_tm == max_tem_pp,.(area,provi,md),],'clipboard')\n# plot\nggplot(data = ave_tem_ori_da,aes(x=x_lab,y=sma_five,color=as.factor(provi))) + geom_line() + facet_grid(.~type)+labs(x='日期',y='5日平滑温度',title='不同类型温度')  + guides(fill = guide_legend(reverse= TRUE))\n\nggplot(data = ave_tem_ori_da,aes(x=factor(provi),y=sma_five,color=as.factor(provi),fill=factor(type))) + geom_violin()+labs(x='省份',y='5日平滑温度',title='省份温度小提琴图')  + guides(fill = guide_legend(reverse= TRUE)) +theme(axis.text.x=element_text(angle=50,hjust=0.5, vjust=0.5)) +theme(legend.position=\"none\") \n\n# month ave\nave_tem_ori_da[,.(ave_tm = mean(ave_tm,na.rm = TRUE)),.(provi,month)][,.N,provi]\nggplot(data =ave_tem_ori_da[,.(ave_tm = mean(ave_tm,na.rm = TRUE)),.(provi,month,type)],aes(x=month,y=ave_tm,group = factor(provi),color= factor(provi)))+ geom_line() + facet_grid(.~type)\nwrite.csv(ave_tem_ori_da[,.(ave_tm = mean(ave_tm,na.rm = TRUE)),.(provi,month)],'clipboard')\n\n# lingshou data bind tem ----\n# deal\nprovi_ls_day <- fread('C:\\\\Users\\\\hasee\\\\Desktop\\\\wea_xiuzheng\\\\汇报天气特征\\\\data_ori\\\\省天产品季.csv',skip=19,encoding='UTF-8')\nsetnames(provi_ls_day,names(provi_ls_day),c('week','ymd','provi','season','lssz','lsje','lssl'))\npp_right <- fread('C:\\\\Users\\\\hasee\\\\Desktop\\\\wea_xiuzheng\\\\汇报天气特征\\\\data_ori\\\\pp.txt')\nprovi_ls_day <- provi_ls_day %>% left_join(pp_right,by=c('season')) %>% as.data.table()\n\nprovi_ls_day[,':='(md = str_sub(ymd,5,8),month = str_sub(ymd,5,6)),]\ndata_pp <-  data.table(md=sort(unique(provi_ls_day$md)),x_lab = c(1:366))\nprovi_ls_day[md=='0229',':='(md=0228),]\n\n# dealed provi\nprovi_ls_day_season <- provi_ls_day[,.(lssl = sum(lssl,na.rm = TRUE)),.(provi,md,month,season_chanpin)]\nave_tem_right <- ave_tem_ori_da[,.(area,provi,md,month,ave_tm,season),] %>% setnames('season','season_tem')\nprovi_ls_day_season <- provi_ls_day_season %>% left_join(ave_tem_right[,.(provi,md,area,ave_tm,season_tem),],by = c(\"provi\", \"md\")) %>% as.data.table()\nprovi_ls_day_season[,.(lssl = sum(lssl,na.rm = TRUE)),.(provi,season_tem,season_chanpin)]\n\nprovi_season_season_ls<- provi_ls_day_season[!is.na(season_tem),.(lssl = sum(lssl,na.rm = TRUE)),.(provi,season_tem,season_chanpin)]\nprovi_season_season_ls[,\":=\"(lssl_all = sum(lssl,na.rm=TRUE)),.(provi,season_tem)]\nprovi_season_season_ls[,\":=\"(lssl_zb = lssl/lssl_all),]\nwrite.csv(provi_season_season_ls,'clipboard')\n\n# plot\nprovi_ls_day_season_plot <- provi_ls_day_season[!is.na(season_tem),,]\nggplot(data = provi_ls_day_season_plot,aes(x=ave_tm,y=lssl,color= factor(provi)))+ geom_point()+ facet_grid(season_tem~season_chanpin) + guides(fill = guide_legend(reverse= TRUE)) \nggplot(data = provi_ls_day_season_plot,aes(x=ave_tm,y=lssl,color= factor(provi)))+ geom_point()+ facet_grid(season_chanpin~season_tem) + guides(fill = guide_legend(reverse= TRUE))\nggplot(data = provi_ls_day_season_plot,aes(x=ave_tm,y=lssl,color= factor(season_chanpin)))+ geom_point()+  guides(fill = guide_legend(reverse= TRUE)) + facet_grid(.~season_chanpin)\n\n# analysis model\n\n",
    "created" : 1536674630440.000,
    "dirty" : false,
    "encoding" : "CP936",
    "folds" : "",
    "hash" : "1069859252",
    "id" : "E0C9D7F",
    "lastKnownWriteTime" : 1537953254,
    "last_content_update" : 1537953254069,
    "path" : "E:/Rworkspace/DemoR/machineLearning/WeatherSeason_Demo.R",
    "project_path" : "WeatherSeason_Demo.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}